To check Azure AD user password expiry using Python, you can use the Microsoft Graph API. Hereâ€™s how you can do it:
Steps to Get Password Expiry:

    Register an Azure AD App with API permissions (User.Read.All).

    Get an Access Token using client credentials.

    Query the Microsoft Graph API to fetch user details, including passwordPolicies and passwordLastSetDateTime.

    Calculate Expiry Date based on your organization's password policy.

Python Code to Fetch Password Expiry

import requests
import datetime

# Azure AD Credentials
TENANT_ID = "your_tenant_id"
CLIENT_ID = "your_client_id"
CLIENT_SECRET = "your_client_secret"

# Microsoft Graph API endpoints
TOKEN_URL = f"https://login.microsoftonline.com/{TENANT_ID}/oauth2/v2.0/token"
GRAPH_API_URL = "https://graph.microsoft.com/v1.0/users"

# Fetch Access Token
def get_access_token():
    data = {
        "client_id": CLIENT_ID,
        "client_secret": CLIENT_SECRET,
        "scope": "https://graph.microsoft.com/.default",
        "grant_type": "client_credentials"
    }
    response = requests.post(TOKEN_URL, data=data)
    response.raise_for_status()
    return response.json().get("access_token")

# Get User Password Expiry
def get_user_password_expiry(user_email):
    headers = {"Authorization": f"Bearer {get_access_token()}"}
    response = requests.get(f"{GRAPH_API_URL}/{user_email}?$select=displayName,passwordPolicies,passwordLastSetDateTime", headers=headers)
    response.raise_for_status()
    
    user_data = response.json()
    password_last_set = user_data.get("passwordLastSetDateTime")
    password_policies = user_data.get("passwordPolicies", "")

    if not password_last_set:
        return f"Password last set date not available for {user_email}"

    password_last_set_date = datetime.datetime.strptime(password_last_set, "%Y-%m-%dT%H:%M:%SZ")

    # Default Azure AD password expiration (90 days) - Adjust based on your orgâ€™s policy
    expiry_days = 90 if "DisablePasswordExpiration" not in password_policies else float('inf')
    expiry_date = password_last_set_date + datetime.timedelta(days=expiry_days)

    return f"User: {user_data['displayName']}\nPassword Last Set: {password_last_set_date}\nExpiry Date: {expiry_date}"

# Example Usage
user_email = "user@example.com"
print(get_user_password_expiry(user_email))

What This Code Does

    Authenticates with Microsoft Graph API using client credentials.

    Fetches user password details (last set date & policies).

    Calculates the expiry date based on a default 90-day policy.

Additional Notes

    If your organization has a custom password policy, you may need to adjust expiry_days.

    Some users may have DisablePasswordExpiration enabled.

    You must have Admin API permissions (User.Read.All or Directory.Read.All).

Would you like help setting up Azure AD app registration for this? ðŸš€
Unlock more with Plus
ChatGPT Plus gives you higher limits, smarter models, and Sora for video.


